apiVersion: v1
kind: Namespace
metadata:
  name: postgres
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pvc
  namespace: postgres
  labels:
    app: postgres-db
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: postgres-db
  namespace: postgres
  labels:
    app: postgres-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  serviceName: postgres-db-service
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
      - name: postgres-db
        image: postgres
        imagePullPolicy: 'IfNotPresent'
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: dbfiles
        - name: init-scripts
          mountPath: "/docker-entrypoint-initdb.d"
        readinessProbe:
          exec:
            command: ["pg_isready"]
          initialDelaySeconds: 15
          timeoutSeconds: 2
        livenessProbe:
          exec:
            command: ["pg_isready"]
          initialDelaySeconds: 15
          timeoutSeconds: 2
        envFrom:
        - secretRef:
            name: postgres-secrets
        env:
        - name: PGDATA
          value: /var/lib/postgresql/data/dbfiles
        - name: POSTGRES_DB
          value: sonataflow
        - name: POSTGRES_HOST_AUTH_METHOD
          value: password
        - name: POSTGRES_INITDB_ARGS
          value: "-U sonataflow"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: init-scripts
        configMap:
          name: sonataflow-runtime-ddl
---
kind: Service
apiVersion: v1
metadata:
  name: postgres-db-service
  namespace: postgres
  labels:
    app: postgres-db
spec:
  selector:
    app: postgres-db
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
