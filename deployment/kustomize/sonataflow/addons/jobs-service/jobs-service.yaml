kind: Deployment
apiVersion: apps/v1
metadata:
  name: jobs-service
  labels:
    app: jobs-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jobs-service
  template:
    metadata:
      labels:
        app: jobs-service
    spec:
      containers:
      - name: jobs-service
        image: quay.io/kiegroup/kogito-jobs-service-postgresql:1.44
        ports:
        - containerPort: 8080
        env:
        - name: QUARKUS_DATASOURCE_REACTIVE_URL
          value: "postgresql://postgres-db-service.postgres.svc.cluster.local:5432/sonataflow?search_path=jobs-service"
        - name: QUARKUS_DATASOURCE_JDBC_URL
          value: "jdbc:postgresql://postgres-db-service.postgres.svc.cluster.local:5432/sonataflow?currentSchema=jobs-service"
        - name: QUARKUS_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: POSTGRES_USER
        - name: QUARKUS_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: POSTGRES_PASSWORD
        - name: JOBS_SERVICE_PERSISTENCE
          value: postgresql
        - name: QUARKUS_DATASOURCE_DB_KIND
          value: postgresql
        - name: KOGITO_JOBS_SERVICE_KNATIVE_EVENTS
          value: "false"
        - name: KOGITO_JOBS_SERVICE_JOB_STATUS_CHANGE_EVENTS
          value: "true"
        - name: MP_MESSAGING_OUTGOING_KOGITO_JOB_SERVICE_JOB_STATUS_EVENTS_HTTP_URL
          value: http://data-index-service/jobs
        - name: SCRIPT_DEBUG
          value: "false"
        - name: QUARKUS_LOG_LEVEL
          value: INFO
        volumeMounts:
        - name: application-config
          mountPath: "/home/kogito/config"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /q/health/live
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /q/health/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
      volumes:
      - name: application-config
        configMap:
          name: jobs-service-properties
      initContainers:
      - name: init-postgres
        image: busybox:1.36
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'until nc -vz postgres-db-service.postgres.svc.cluster.local 5432; do echo "Waiting for postgres server"; sleep 3; done;']
---
kind: Service
apiVersion: v1
metadata:
  name: jobs-service-service
  labels:
    app: jobs-service
spec:
  selector:
    app: jobs-service
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080
  type: NodePort
