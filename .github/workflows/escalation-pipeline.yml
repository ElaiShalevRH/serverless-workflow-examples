---
  name: Escalation CI pipeline
  
  on:
    workflow_dispatch:
    push:
      paths:
        - escalation-eda/*
    release:
      types: [prereleased]
  env:
    ESCALATION_SWF_PATH: "escalation-eda/escalation-swf"
    MVN_OPTS: "-Dmaven.repo.remote=https://repository.jboss.org/nexus/content/groups/public -s escalation-eda/settings.xml"
  jobs:    
    build_and_deploy_chart:
      runs-on: ubuntu-latest
      name: Build and deploy the new chart on the GH pages repository
      env:
        HELM_REPO_URL: "https://dmartinol.github.io/serverless-workflow-examples"
        ESCALATION_CHART_PATH: "escalation-eda/helm/escalation-eda"
        # TODO: one of latest/release
        CHART_REPO: "latest"  
      steps:
        - uses: actions/checkout@v3

        - name: Configure Git
          run: |
            git config user.name "${{ github.actor }}"
            git config user.email "${{ github.actor }}@users.noreply.github.com"

        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'temurin'
            cache: maven
      
        - name: Set env
          run: |
            echo "ESCALATION_CHART=${{ env.ESCALATION_CHART_PATH }}/Chart.yaml" >> "$GITHUB_ENV"
            echo "ESCALATION_CHART_VERSION=$(mvn ${{ env.MVN_OPTS }} help:evaluate -Dexpression=project.version -q -DforceStdout -f ${{ env.ESCALATION_SWF_PATH }}/pom.xml | sed 's/-SNAPSHOT//g')" >> "$GITHUB_ENV"
            echo "CURRENT_CHART_REPO=charts/${{ env.CHART_REPO }}" >> "$GITHUB_ENV"
            echo "CHART_NAME=$(cat ${{ env.ESCALATION_CHART }} | grep 'name:' | cut -c 7-)" >> "$GITHUB_ENV"

        - name: Update chart version
          run: |
            sed -i 's/version: .*/version: ${{ env.ESCALATION_CHART_VERSION }}/g' ${{ env.ESCALATION_CHART }}
            sed -i 's/appVersion: .*/appVersion: ${{ env.ESCALATION_CHART_VERSION }}/g' ${{ env.ESCALATION_CHART }}
  
        - name: Setup Helm
          uses: azure/setup-helm@v3

        - name: Lint chart
          run: helm lint ${{ env.ESCALATION_CHART_PATH }}
  
        - name: Package chart
          run: helm package ${{ env.ESCALATION_CHART_PATH }}
  
        - name: Push new chart file
          run: |
            git add $ESCALATION_CHART
            if ! git diff-index --quiet HEAD; then
              git commit -m "build: bumped ${{ env.CHART_NAME }} to ${{ env.ESCALATION_CHART_VERSION }} [skip ci]"
              git push
            fi
        # TODO: add tag on release or add released artifact to tag?
        # - name: Push new tag
        #   if: ${{ github.event.inputs.add_tag }}
        #   run: |
        #     git tag "v${{ github.event.inputs.new_semver }}"
        #     git push origin --tags
  
        - name: Checkout GH pages
          run: |
            git fetch
            git checkout gh_pages

        - name: Prepare repository
          run: |
            mkdir -p ${{ env.CURRENT_CHART_REPO }}
            mv *.tgz ${{ env.CURRENT_CHART_REPO }}

        - name: Update repository index
          run: |
            helm repo index --url ${{ env.HELM_REPO_URL }}/${{ env.CURRENT_CHART_REPO }} ${{ env.CURRENT_CHART_REPO }}

        - name: Deploy new chart
          run: |
            git add ${{ env.CURRENT_CHART_REPO }}
            git commit -m "chore: deployed chart ${{ env.CHART_NAME }} version ${{ env.ESCALATION_CHART_VERSION }} on repo ${{ env.CURRENT_CHART_REPO }}"
            git push
    build_and_deploy_java_apps:
      runs-on: ubuntu-latest
      name: Build and deploy container images for the Java applications
      env:
        JIRA_LISTENER_PATH: "escalation-eda/jira-listener"
        ESCALATION_SWF_IMAGE_NAME: "escalation-swf"
        JIRA_LISTENER_IMAGE_NAME: "jira-listener"
        IMAGE_REGISTRY: "quay.io"
        IMAGE_GROUP: "orchestrator"
      steps:
        - uses: actions/checkout@v3

        - name: Set env
          run: |
            echo "ESCALATION_SWF_VERSION=$(mvn ${{ env.MVN_OPTS }} help:evaluate -Dexpression=project.version -q -DforceStdout -f ${{ env.ESCALATION_SWF_PATH }}/pom.xml)" >> "$GITHUB_ENV"
            echo "JIRA_LISTENER_VERSION=$(mvn ${{ env.MVN_OPTS }} help:evaluate -Dexpression=project.version -q -DforceStdout -f ${{ env.JIRA_LISTENER_PATH }}/pom.xml)" >> "$GITHUB_ENV"

        - name: Build Java projects
          run: |
            mvn ${{ env.MVN_OPTS }} -B clean package --file escalation-eda/pom.xml -DskipTests
        # TODO: enable tests once fixed

        - name: "Build ${{ env.ESCALATION_SWF_IMAGE_NAME }} image"
          run: |
            mvn ${{ env.MVN_OPTS }} clean install -Pknative -DskipTests \
              -Dquarkus.container-image.registry=${{ env.IMAGE_REGISTRY }} \
              -Dquarkus.container-image.group=${{ env.IMAGE_GROUP }} \
              -Dquarkus.container-image.name=${{ env.ESCALATION_SWF_IMAGE_NAME }} \
              -Dquarkus.container-image.tag=${{ env.ESCALATION_SWF_VERSION }} \
              --file ${{ env.ESCALATION_SWF_PATH }}/pom.xml
      
        - name: "Build ${{ env.JIRA_LISTENER_IMAGE_NAME }} image"
          run: |
            docker build -f ${{ env.JIRA_LISTENER_PATH }}/src/main/docker/Dockerfile.jvm \
              -t ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_GROUP }}/${{ env.JIRA_LISTENER_IMAGE_NAME }}:${{ env.JIRA_LISTENER_VERSION }} ${{ env.JIRA_LISTENER_PATH }}
            
        - name: "Login to ${{ env.IMAGE_REGISTRY }}"
          run: |
            docker login --username="${{ secrets.REGISTRY_USERNAME }}" --password="${{ secrets.REGISTRY_PASSWORD }}" ${{ env.IMAGE_REGISTRY }}

        - name: "Push ${{ env.ESCALATION_SWF_IMAGE_NAME }} to ${{ env.IMAGE_REGISTRY}}/${{ env.IMAGE_GROUP }}"
          run: |
            docker push ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_GROUP }}/${{ env.ESCALATION_SWF_IMAGE_NAME }}:${{ env.ESCALATION_SWF_VERSION }}
        
        - name: "Push ${{ env.JIRA_LISTENER_IMAGE_NAME }} to ${{ env.IMAGE_REGISTRY}}/${{ env.IMAGE_GROUP }}"
          run: |
            docker push ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_GROUP }}/${{ env.JIRA_LISTENER_IMAGE_NAME }}:${{ env.JIRA_LISTENER_VERSION }}